version: '3.8'

services:
  frontend:
    build:
      context: ./../frontend/banking-app-react
      dockerfile: Dockerfile  
    ports:
      - "3000:3000"  
    depends_on:
      - account-service
      - transaction-service
      - middleware-consumer
    networks:
      - xepelingnetwork

  account-service:
    image: account-service:1.0.0
    ports:
      - "8080:8080"  
    environment:  
      AMAZON_DYNAMODB_ENDPOINT: http://dynamodb:8000/
      AMAZON_AWS_ACCESSKEY: test
      AMAZON_AWS_SECRETKEY: test
    networks:
      - xepelingnetwork

  transaction-service:
    image: transaction-service:1.0.0 
    ports:
      - "8081:8081"  
    environment:  
      AMAZON_DYNAMODB_ENDPOINT: http://dynamodb:8000/
      AMAZON_AWS_ACCESSKEY: test
      AMAZON_AWS_SECRETKEY: test
      KAFKA_BOOTSTRAP-SERVERS: kafka:9092
    networks:
      - xepelingnetwork

  middleware-consumer:
    image: middleware-consumer:1.0.0 
    ports:
      - "8083:8083"  
    environment:  
      AMAZON_DYNAMODB_ENDPOINT: http://dynamodb:8000/
      AMAZON_AWS_ACCESSKEY: test
      AMAZON_AWS_SECRETKEY: test
      KAFKA_BOOTSTRAP-SERVERS: kafka:9092
    networks:
      - xepelingnetwork

  dynamodb:
    image: amazon/dynamodb-local
    ports:
      - "8000:8000"
    networks:
      - xepelingnetwork      
    
  kafka:
    image: confluentinc/cp-server:7.2.1
    ports:
      - "9092:9092"  
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - xepelingnetwork
    
    
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    ports:
      - "2181:2181"  # Puerto de Zookeeper
    networks:
      - xepelingnetwork
    
  dynamo-service-db-init:
    depends_on:
      - dynamodb
    image: amazon/aws-cli
    networks:
      - xepelingnetwork
    environment:
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
    command: >-
      dynamodb create-table
          --table-name Account
          --attribute-definitions
              AttributeName=id,AttributeType=N
              AttributeName=name,AttributeType=S
              AttributeName=balance,AttributeType=N
              AttributeName=eventDate,AttributeType=S
              AttributeName=version,AttributeType=N
          --key-schema
              AttributeName=id,KeyType=HASH
          --billing-mode PAY_PER_REQUEST
          --endpoint-url http://dynamodb:8000 --region us-east-1 &&
      dynamodb create-table
          --table-name Transaction
          --attribute-definitions
              AttributeName=id,AttributeType=S
              AttributeName=accountId,AttributeType=N
              AttributeName=type,AttributeType=S
              AttributeName=amount,AttributeType=N
              AttributeName=eventDate,AttributeType=S
          --key-schema
              AttributeName=id,KeyType=HASH
          --billing-mode PAY_PER_REQUEST
          --endpoint-url http://dynamodb:8000 --region us-east-1
          --global-secondary-indexes \
                "[
                    {
                        \"IndexName\": \"search-account\",
                        \"KeySchema\": [{\"AttributeName\":\"accountId\",\"KeyType\":\"HASH\"}],
                        \"Projection\":{
                            \"ProjectionType\":\"ALL\"
                        },
                        \"ProvisionedThroughput\": {
                            \"ReadCapacityUnits\": 10,
                            \"WriteCapacityUnits\": 5
                        }
                    }
                ]"
              
networks:
 xepelingnetwork:
   driver: bridge